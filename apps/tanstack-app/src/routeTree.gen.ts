/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedAImport } from './routes/_authenticated/a'
import { Route as AuthenticatedGamesIndexImport } from './routes/_authenticated/games/index'
import { Route as AuthenticatedGamesGameIdIndexImport } from './routes/_authenticated/games/$gameId/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedARoute = AuthenticatedAImport.update({
  id: '/a',
  path: '/a',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGamesIndexRoute = AuthenticatedGamesIndexImport.update({
  id: '/games/',
  path: '/games/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedGamesGameIdIndexRoute =
  AuthenticatedGamesGameIdIndexImport.update({
    id: '/games/$gameId/',
    path: '/games/$gameId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/a': {
      id: '/_authenticated/a'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof AuthenticatedAImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/games/': {
      id: '/_authenticated/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof AuthenticatedGamesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/games/$gameId/': {
      id: '/_authenticated/games/$gameId/'
      path: '/games/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof AuthenticatedGamesGameIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedARoute: typeof AuthenticatedARoute
  AuthenticatedGamesIndexRoute: typeof AuthenticatedGamesIndexRoute
  AuthenticatedGamesGameIdIndexRoute: typeof AuthenticatedGamesGameIdIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedARoute: AuthenticatedARoute,
  AuthenticatedGamesIndexRoute: AuthenticatedGamesIndexRoute,
  AuthenticatedGamesGameIdIndexRoute: AuthenticatedGamesGameIdIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/a': typeof AuthenticatedARoute
  '/games': typeof AuthenticatedGamesIndexRoute
  '/games/$gameId': typeof AuthenticatedGamesGameIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/a': typeof AuthenticatedARoute
  '/games': typeof AuthenticatedGamesIndexRoute
  '/games/$gameId': typeof AuthenticatedGamesGameIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/_authenticated/a': typeof AuthenticatedARoute
  '/_authenticated/games/': typeof AuthenticatedGamesIndexRoute
  '/_authenticated/games/$gameId/': typeof AuthenticatedGamesGameIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/about' | '/login' | '/a' | '/games' | '/games/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/about' | '/login' | '/a' | '/games' | '/games/$gameId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/login'
    | '/_authenticated/a'
    | '/_authenticated/games/'
    | '/_authenticated/games/$gameId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/a",
        "/_authenticated/games/",
        "/_authenticated/games/$gameId/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/a": {
      "filePath": "_authenticated/a.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/games/": {
      "filePath": "_authenticated/games/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/games/$gameId/": {
      "filePath": "_authenticated/games/$gameId/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
